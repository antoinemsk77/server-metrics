services:
  metrics-agent:
    build: ./agent
    container_name: server-metrics-agent
    restart: unless-stopped
    env_file: .env
    volumes:
      - /proc:/host_proc:ro
      - /:/host_root:ro
    pid: "host"
    network_mode: host
    healthcheck:
      test: ["CMD", "python", "- <<'PY'\nimport os, psycopg2; psycopg2.connect(host=os.getenv('DB_HOST'),port=int(os.getenv('DB_PORT')),dbname=os.getenv('DB_NAME'),user=os.getenv('DB_USER'),password=os.getenv('DB_PASS'),sslmode=os.getenv('PGSSLMODE','prefer')).close(); print('ok')\nPY"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  scheduler:                 
    image: alpine:3.20
    container_name: server-metrics-scheduler
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./scripts:/app/scripts:ro
      - ./cron/root:/etc/crontabs/root:ro
    entrypoint: >
      /bin/sh -c "
      set -e;
      apk update &&
      apk add --no-cache postgresql16-client tzdata &&
      touch /var/log/cron.log &&
      crond -f -l 8
      "
